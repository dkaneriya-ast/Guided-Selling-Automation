name: Robot Framework Tests

on:
  workflow_dispatch:
    inputs:
      env:
        description: "Environment to run against (dev/stg/prod)"
        required: true
        default: "dev"
      rerun:
        description: "Enable rerun of failed tests?"
        required: true
        type: boolean
        default: true

jobs:
  prepare-file:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prompt for File Upload
        id: upload
        uses: boasihq/interactive-inputs@v2
        with:
          ngrok-authtoken: ${{ secrets.NGROK_AUTHTOKEN }}
          timeout: 160
          title: "Upload test data for Robot Framework"
          interactive: |
            fields:
              - label: locations_file
                properties:
                  display: Upload locations.xlsx
                  type: multifile
                  required: true
                  description: Please upload the Excel test data file (must be .xlsx)
                  acceptedFileTypes:
                    - application/vnd.openxmlformats-officedocument.spreadsheetml.sheet

      - name: Move uploaded file to Data/locations.xlsx
        run: |
          mkdir -p Data
          uploaded_dir="${{ steps.upload.outputs.locations_file }}"
          if [ -z "$uploaded_dir" ]; then
            echo "::error::No uploaded directory found in outputs!"
            exit 1
          fi

          echo "📂 Uploaded directory: $uploaded_dir"
          uploaded_file=$(ls -1 "$uploaded_dir" | head -n 1 || true)

          if [ -z "$uploaded_file" ]; then
            echo "::error::No file found in uploaded directory!"
            exit 1
          fi

          cp "$uploaded_dir/$uploaded_file" Data/locations.xlsx
          echo "✅ Uploaded file saved to Data/locations.xlsx"

      - name: Validate uploaded file is Excel
        run: |
          if ! file Data/locations.xlsx | grep -E -q "Excel|Zip archive"; then
            echo "::error::Uploaded file is not a valid Excel .xlsx file"
            exit 1
          fi
          echo "✅ File validation passed (Excel detected)"

      - name: Upload prepared Data folder (with locations.xlsx)
        uses: actions/upload-artifact@v4
        with:
          name: test-data-${{ github.run_id }}
          path: Data/

  test:
    needs: prepare-file
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download prepared Data folder
        uses: actions/download-artifact@v4
        with:
          name: test-data-${{ github.run_id }}
          path: Data
          
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Detect CPU cores
        id: cpu
        run: echo "cores=$(nproc)" >> $GITHUB_OUTPUT

      - name: Run initial Robot tests
        id: initial_run
        continue-on-error: true
        run: |
          echo "➡️ Running initial pabot tests..."
          pabot --processes ${{ steps.cpu.outputs.cores }} \
                --testlevelsplit \
                --variable env:${{ github.event.inputs.env }} \
                --outputdir Results \
                Tests/GuidedSellingFlow.robot

      - name: Rerun failed tests and Merge Results
        if: steps.initial_run.outcome == 'failure' && github.event.inputs.rerun == 'true'
        run: |
          echo "🔁 Rerunning failed tests..."
          pabot --processes ${{ steps.cpu.outputs.cores }} \
                --testlevelsplit \
                --variable env:${{ github.event.inputs.env }} \
                --pabotprerunmodifier DataDriver.rerunfailed:Results/output.xml \
                --outputdir Results/rerun \
                --output rerun.xml \
                Tests/GuidedSellingFlow.robot || true

          if [ -f Results/rerun/rerun.xml ]; then
            echo "📊 Merging results..."
            rebot --merge \
              --output Results/merged_output.xml \
              --log Results/merged_log.html \
              --report Results/merged_report.html \
              Results/output.xml Results/rerun/rerun.xml
          else
            echo "⚠️ No rerun.xml was produced. The initial failure will stand."
            exit 1
          fi

      - name: Check initial run status (rerun disabled)
        if: steps.initial_run.outcome == 'failure' && github.event.inputs.rerun == 'false'
        run: |
          echo "::error::Initial tests failed and reruns were disabled. Failing the workflow."
          exit 1

      - name: Upload Robot Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: robot-results-${{ github.event.inputs.env }}-${{ github.run_id }}
          path: Results/
          retention-days: 7
